[{"_1":2,"_90":91},"layout:/docs/api/rest",{"_3":4},"data",{"_5":6,"_72":73,"_78":79,"_83":77,"_84":85},"sidebarGroups",[7,61],{"_8":9,"_10":11},"group","Endpoints","items",[12,21,25,29,33,37,41,45,49,53,57],{"_13":14,"_15":16,"_17":18,"_19":20},"title","Get Sessions","href","/docs/api/rest/get-sessions","active",false,"uniqIndex",0,{"_13":22,"_15":23,"_17":18,"_19":24},"Get all alerts","/docs/api/rest/get-all-alerts",1,{"_13":26,"_15":27,"_17":18,"_19":28},"Create an alert","/docs/api/rest/create-an-alert",2,{"_13":30,"_15":31,"_17":18,"_19":32},"Update an alert by ID","/docs/api/rest/update-an-alert-by-id",3,{"_13":34,"_15":35,"_17":18,"_19":36},"Delete an alert by ID","/docs/api/rest/delete-an-alert-by-id",4,{"_13":38,"_15":39,"_17":18,"_19":40},"Get a list of webhooks","/docs/api/rest/get-a-list-of-webhooks",5,{"_13":42,"_15":43,"_17":18,"_19":44},"Create a webhook","/docs/api/rest/create-a-webhook",6,{"_13":46,"_15":47,"_17":18,"_19":48},"Update a webhook","/docs/api/rest/update-a-webhook",7,{"_13":50,"_15":51,"_17":18,"_19":52},"Delete a webhook","/docs/api/rest/delete-a-webhook",8,{"_13":54,"_15":55,"_17":18,"_19":56},"Get a list of websites","/docs/api/rest/get-a-list-of-websites",9,{"_13":58,"_15":59,"_17":18,"_19":60},"Create a website","/docs/api/rest/create-a-website",10,{"_8":62,"_10":63},"Types",[64,68],{"_13":65,"_15":66,"_17":18,"_19":67},"EventKind","/docs/api/rest/EventKind",11,{"_13":69,"_15":70,"_17":18,"_19":71},"RelativeDateString","/docs/api/rest/RelativeDateString",12,"breadcrumbs",[74,76],{"_13":62,"_15":75},"",{"_13":65,"_15":77},"docs/api/rest/EventKind","navlinks",{"_80":-7,"_81":82},"prev","next",{"_13":69,"_15":70},"slug","metadata",{"_13":65,"_86":87,"_88":89},"layout","wide","uniform","~/snippets/src/EventKind.ts","/docs/api/rest",{"_3":92},{"_5":93,"_72":111,"_78":114,"_83":77,"_116":117,"_84":118,"_119":120},[94,107],{"_8":9,"_10":95},[96,97,98,99,100,101,102,103,104,105,106],{"_13":14,"_15":16,"_17":18,"_19":20},{"_13":22,"_15":23,"_17":18,"_19":24},{"_13":26,"_15":27,"_17":18,"_19":28},{"_13":30,"_15":31,"_17":18,"_19":32},{"_13":34,"_15":35,"_17":18,"_19":36},{"_13":38,"_15":39,"_17":18,"_19":40},{"_13":42,"_15":43,"_17":18,"_19":44},{"_13":46,"_15":47,"_17":18,"_19":48},{"_13":50,"_15":51,"_17":18,"_19":52},{"_13":54,"_15":55,"_17":18,"_19":56},{"_13":58,"_15":59,"_17":18,"_19":60},{"_8":62,"_10":108},[109,110],{"_13":65,"_15":66,"_17":18,"_19":67},{"_13":69,"_15":70,"_17":18,"_19":71},[112,113],{"_13":62,"_15":75},{"_13":65,"_15":77},{"_80":-7,"_81":115},{"_13":69,"_15":70},"code","\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"EventKind\",\n  \"layout\": \"wide\",\n  \"uniform\": \"~/snippets/src/EventKind.ts\"\n};\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ...props.components\n  }, {Atlas} = _components;\n  if (!Atlas) _missingMdxReference(\"Atlas\", true);\n  return _jsx(Atlas, {\n    references: [{\n      canonical: 'enum-EventKind',\n      context: {\n        col: 12,\n        fileFullPath: 'src/EventKind.ts',\n        fileName: 'EventKind.ts',\n        line: 5,\n        packageName: 'snippets',\n        signatureText: {\n          code: 'export enum EventKind {\\n}',\n          lang: 'ts'\n        },\n        sourcecode: {\n          code: 'export enum EventKind {\\n    /** Mouse click event */\\n    MouseClick = 5,\\n\\n    /** Mouse double click event */\\n    MouseDoubleClick = 6,\\n\\n    /** Click on error element event */\\n    ErrorClick = 20,\\n\\n    /** Rapid click indicating user frustration */\\n    RageClick = 21,\\n\\n    /** Console log event */\\n    Log = 24,\\n\\n    /** JavaScript error event */\\n    Error = 25,\\n\\n    /** Custom event */\\n    Custom = 26,\\n\\n    /** Network log event */\\n    NetLog = 29,\\n\\n    /** Network error event */\\n    NetError = 30,\\n}',\n          lang: 'ts'\n        }\n      },\n      definitions: [{\n        properties: [{\n          description: 'Mouse click event\\n',\n          name: 'MouseClick (5)',\n          type: 'number'\n        }, {\n          description: 'Mouse double click event\\n',\n          name: 'MouseDoubleClick (6)',\n          type: 'number'\n        }, {\n          description: 'Click on error element event\\n',\n          name: 'ErrorClick (20)',\n          type: 'number'\n        }, {\n          description: 'Rapid click indicating user frustration\\n',\n          name: 'RageClick (21)',\n          type: 'number'\n        }, {\n          description: 'Console log event\\n',\n          name: 'Log (24)',\n          type: 'number'\n        }, {\n          description: 'JavaScript error event\\n',\n          name: 'Error (25)',\n          type: 'number'\n        }, {\n          description: 'Custom event\\n',\n          name: 'Custom (26)',\n          type: 'number'\n        }, {\n          description: 'Network log event\\n',\n          name: 'NetLog (29)',\n          type: 'number'\n        }, {\n          description: 'Network error event\\n',\n          name: 'NetError (30)',\n          type: 'number'\n        }],\n        title: 'Members'\n      }],\n      description: _jsx(_components.p, {\n        children: \"A numeric value that represents the type of event in the LiveSession API. Each event type has a corresponding numeric identifier.\"\n      }),\n      examples: {\n        groups: []\n      },\n      title: 'Enum EventKind'\n    }]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n",{"_13":65,"_86":87,"_88":89},"rawPage","---\ntitle: EventKind\nlayout: wide\nuniform: \"~/snippets/src/EventKind.ts\"\n---\n\n\n"]
