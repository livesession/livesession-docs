[{"_1":2},"/Users/zdunecki/Code/livesession/xyd/cli/plugins/xyd-plugin-zero/src/pages/docs",{"_3":4},"data",{"_5":6,"_52":53,"_58":59,"_64":57,"_65":66},"sidebarGroups",[7,49],{"_8":9,"_10":11},"group","Endpoints","items",[12,19,22,25,28,31,34,37,40,43,46],{"_13":14,"_15":16,"_17":18},"title","List sessions","href","/docs/api/rest/GetSessions","active",false,{"_13":20,"_15":21,"_17":18},"List alerts","/docs/api/rest/GetAllAlerts",{"_13":23,"_15":24,"_17":18},"Create alert","/docs/api/rest/CreateAnAlert",{"_13":26,"_15":27,"_17":18},"Update alert","/docs/api/rest/UpdateAnAlertById",{"_13":29,"_15":30,"_17":18},"Delete alert","/docs/api/rest/DeleteAnAlertById",{"_13":32,"_15":33,"_17":18},"List webhooks","/docs/api/rest/GetAListOfWebhooks",{"_13":35,"_15":36,"_17":18},"Create webhook","/docs/api/rest/CreateAWebhook",{"_13":38,"_15":39,"_17":18},"Update webhook","/docs/api/rest/UpdateAWebhook",{"_13":41,"_15":42,"_17":18},"Delete webhook","/docs/api/rest/DeleteAWebhook",{"_13":44,"_15":45,"_17":18},"List websites","/docs/api/rest/GetAListOfWebsites",{"_13":47,"_15":48,"_17":18},"Create website","/docs/api/rest/CreateAWebsite",{"_8":50,"_10":51},"Types",[],"breadcrumbs",[54,56],{"_13":9,"_15":55},"",{"_13":20,"_15":57},"docs/api/rest/GetAllAlerts","navlinks",{"_60":61,"_62":63},"prev",{"_13":14,"_15":16},"next",{"_13":23,"_15":24},"slug","code","\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"List alerts\",\n  \"layout\": \"wide\",\n  \"openapi\": \"~/api/rest/openapi.yaml#GET /alerts\"\n};\nfunction _createMdxContent(props) {\n  const {Atlas} = props.components || ({});\n  if (!Atlas) _missingMdxReference(\"Atlas\", true);\n  return _jsx(Atlas, {\n    references: [{\n      canonical: 'GetAllAlerts',\n      category: 'rest',\n      context: {\n        fullPath: 'https:/api.livesession.io/v1/alerts',\n        method: 'get',\n        path: '/alerts'\n      },\n      definitions: [{\n        properties: [{\n          description: 'Unique identifier for the alert',\n          name: 'alert_id',\n          properties: [],\n          type: 'string'\n        }, {\n          description: 'Name of the alert',\n          name: 'name',\n          properties: [],\n          type: 'string'\n        }, {\n          description: 'List of events that trigger the alert',\n          name: 'events',\n          properties: [{\n            description: 'Kind of event, more info [here](/docs/api/rest/EventKind)',\n            name: 'kind',\n            properties: [],\n            type: 'integer'\n          }, {\n            description: 'Value or threshold that triggers the alert',\n            name: 'value',\n            properties: [],\n            type: 'string'\n          }],\n          type: 'array'\n        }, {\n          description: 'Notification provider for the alert',\n          name: 'provider',\n          properties: [],\n          type: 'string'\n        }, {\n          description: 'Slack channel ID for notifications',\n          name: 'slack_channel_id',\n          properties: [],\n          type: 'string'\n        }, {\n          description: 'Webhook ID for notifications',\n          name: 'webhook_id',\n          properties: [],\n          type: 'string'\n        }, {\n          description: 'Whether the alert is currently active',\n          name: 'enabled',\n          properties: [],\n          type: 'boolean'\n        }, {\n          description: '[ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp when the alert was created\\n',\n          name: 'creation_date',\n          properties: [],\n          type: 'string'\n        }],\n        title: 'Response'\n      }],\n      description: '\\nList of all alerts\\n',\n      examples: {\n        groups: [{\n          description: 'Response',\n          examples: [{\n            codeblock: {\n              tabs: [{\n                code: '[\\n  {\\n    \"alert_id\": \"string\",\\n    \"name\": \"string\",\\n    \"events\": [\\n      {\\n        \"kind\": 0,\\n        \"value\": \"string\"\\n      }\\n    ],\\n    \"provider\": \"slack\",\\n    \"slack_channel_id\": \"string\",\\n    \"webhook_id\": \"string\",\\n    \"enabled\": true,\\n    \"creation_date\": \"string\"\\n  }\\n]',\n                highlighted: {\n                  annotations: [],\n                  code: '[\\n  {\\n    \"alert_id\": \"string\",\\n    \"name\": \"string\",\\n    \"events\": [\\n      {\\n        \"kind\": 0,\\n        \"value\": \"string\"\\n      }\\n    ],\\n    \"provider\": \"slack\",\\n    \"slack_channel_id\": \"string\",\\n    \"webhook_id\": \"string\",\\n    \"enabled\": true,\\n    \"creation_date\": \"string\"\\n  }\\n]',\n                  lang: 'json',\n                  meta: 'json',\n                  style: {\n                    background: '#fffffe',\n                    color: '#333333',\n                    colorScheme: 'light'\n                  },\n                  themeName: 'cosmo-light',\n                  tokens: [['[', '#333333'], '\\n  ', ['{', '#333333'], '\\n    ', ['\"alert_id\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"name\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"events\"', '#7051D4'], [': [', '#333333'], '\\n      ', ['{', '#333333'], '\\n        ', ['\"kind\"', '#7051D4'], [':', '#333333'], ' ', ['0', '#272AD8'], [',', '#333333'], '\\n        ', ['\"value\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], '\\n      ', ['}', '#333333'], '\\n    ', ['],', '#333333'], '\\n    ', ['\"provider\"', '#7051D4'], [':', '#333333'], ' ', ['\"slack\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"slack_channel_id\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"webhook_id\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"enabled\"', '#7051D4'], [':', '#333333'], ' ', ['true', '#AD3DA4', {\n                    fontWeight: 'bold'\n                  }], [',', '#333333'], '\\n    ', ['\"creation_date\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], '\\n  ', ['}', '#333333'], '\\n', [']', '#333333']],\n                  value: '[\\n  {\\n    \"alert_id\": \"string\",\\n    \"name\": \"string\",\\n    \"events\": [\\n      {\\n        \"kind\": 0,\\n        \"value\": \"string\"\\n      }\\n    ],\\n    \"provider\": \"slack\",\\n    \"slack_channel_id\": \"string\",\\n    \"webhook_id\": \"string\",\\n    \"enabled\": true,\\n    \"creation_date\": \"string\"\\n  }\\n]'\n                },\n                language: 'json',\n                title: 'json'\n              }],\n              title: '200'\n            }\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"error\": {\\n    \"type\": \"string\",\\n    \"code\": \"string\",\\n    \"param\": \"string\",\\n    \"message\": \"string\",\\n    \"http_status_code\": 0,\\n    \"request_id\": \"string\"\\n  }\\n}',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"error\": {\\n    \"type\": \"string\",\\n    \"code\": \"string\",\\n    \"param\": \"string\",\\n    \"message\": \"string\",\\n    \"http_status_code\": 0,\\n    \"request_id\": \"string\"\\n  }\\n}',\n                  lang: 'json',\n                  meta: 'json',\n                  style: {\n                    background: '#fffffe',\n                    color: '#333333',\n                    colorScheme: 'light'\n                  },\n                  themeName: 'cosmo-light',\n                  tokens: [['{', '#333333'], '\\n  ', ['\"error\"', '#7051D4'], [': {', '#333333'], '\\n    ', ['\"type\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"code\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"param\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"message\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"http_status_code\"', '#7051D4'], [':', '#333333'], ' ', ['0', '#272AD8'], [',', '#333333'], '\\n    ', ['\"request_id\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], '\\n  ', ['}', '#333333'], '\\n', ['}', '#333333']],\n                  value: '{\\n  \"error\": {\\n    \"type\": \"string\",\\n    \"code\": \"string\",\\n    \"param\": \"string\",\\n    \"message\": \"string\",\\n    \"http_status_code\": 0,\\n    \"request_id\": \"string\"\\n  }\\n}'\n                },\n                language: 'json',\n                title: 'json'\n              }],\n              title: '400'\n            }\n          }, {\n            codeblock: {\n              tabs: [{\n                code: '{\\n  \"error\": {\\n    \"type\": \"string\",\\n    \"code\": \"string\",\\n    \"param\": \"string\",\\n    \"message\": \"string\",\\n    \"http_status_code\": 0,\\n    \"request_id\": \"string\"\\n  }\\n}',\n                highlighted: {\n                  annotations: [],\n                  code: '{\\n  \"error\": {\\n    \"type\": \"string\",\\n    \"code\": \"string\",\\n    \"param\": \"string\",\\n    \"message\": \"string\",\\n    \"http_status_code\": 0,\\n    \"request_id\": \"string\"\\n  }\\n}',\n                  lang: 'json',\n                  meta: 'json',\n                  style: {\n                    background: '#fffffe',\n                    color: '#333333',\n                    colorScheme: 'light'\n                  },\n                  themeName: 'cosmo-light',\n                  tokens: [['{', '#333333'], '\\n  ', ['\"error\"', '#7051D4'], [': {', '#333333'], '\\n    ', ['\"type\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"code\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"param\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"message\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], [',', '#333333'], '\\n    ', ['\"http_status_code\"', '#7051D4'], [':', '#333333'], ' ', ['0', '#272AD8'], [',', '#333333'], '\\n    ', ['\"request_id\"', '#7051D4'], [':', '#333333'], ' ', ['\"string\"', '#D12F1B'], '\\n  ', ['}', '#333333'], '\\n', ['}', '#333333']],\n                  value: '{\\n  \"error\": {\\n    \"type\": \"string\",\\n    \"code\": \"string\",\\n    \"param\": \"string\",\\n    \"message\": \"string\",\\n    \"http_status_code\": 0,\\n    \"request_id\": \"string\"\\n  }\\n}'\n                },\n                language: 'json',\n                title: 'json'\n              }],\n              title: '500'\n            }\n          }]\n        }]\n      },\n      title: 'Get all alerts',\n      type: 'rest_get'\n    }]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"]
