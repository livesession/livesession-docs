[{"_1":2},"/Users/zdunecki/Code/livesession/xyd/cli/plugins/xyd-plugin-zero/src/pages/docs",{"_3":4},"data",{"_5":6,"_72":73,"_78":79,"_82":77,"_83":84},"sidebarGroups",[7,61],{"_8":9,"_10":11},"group","Endpoints","items",[12,21,25,29,33,37,41,45,49,53,57],{"_13":14,"_15":16,"_17":18,"_19":20},"title","List sessions","href","/docs/api/rest/GetSessions","active",false,"uniqIndex",0,{"_13":22,"_15":23,"_17":18,"_19":24},"List alerts","/docs/api/rest/GetAllAlerts",1,{"_13":26,"_15":27,"_17":18,"_19":28},"Create alert","/docs/api/rest/CreateAnAlert",2,{"_13":30,"_15":31,"_17":18,"_19":32},"Update alert","/docs/api/rest/UpdateAnAlertById",3,{"_13":34,"_15":35,"_17":18,"_19":36},"Delete alert","/docs/api/rest/DeleteAnAlertById",4,{"_13":38,"_15":39,"_17":18,"_19":40},"List webhooks","/docs/api/rest/GetAListOfWebhooks",5,{"_13":42,"_15":43,"_17":18,"_19":44},"Create webhook","/docs/api/rest/CreateAWebhook",6,{"_13":46,"_15":47,"_17":18,"_19":48},"Update webhook","/docs/api/rest/UpdateAWebhook",7,{"_13":50,"_15":51,"_17":18,"_19":52},"Delete webhook","/docs/api/rest/DeleteAWebhook",8,{"_13":54,"_15":55,"_17":18,"_19":56},"List websites","/docs/api/rest/GetAListOfWebsites",9,{"_13":58,"_15":59,"_17":18,"_19":60},"Create website","/docs/api/rest/CreateAWebsite",10,{"_8":62,"_10":63},"Types",[64,68],{"_13":65,"_15":66,"_17":18,"_19":67},"EventKind","/docs/api/rest/EventKind",11,{"_13":69,"_15":70,"_17":18,"_19":71},"RelativeDateString","/docs/api/rest/RelativeDateString",12,"breadcrumbs",[74,76],{"_13":62,"_15":75},"",{"_13":69,"_15":77},"docs/api/rest/RelativeDateString","navlinks",{"_80":81},"prev",{"_13":65,"_15":66},"slug","code","\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"RelativeDateString\",\n  \"layout\": \"wide\",\n  \"uniform\": \"~/snippets/src/RelativeDateString.ts\"\n};\nfunction _createMdxContent(props) {\n  const {Atlas} = props.components || ({});\n  if (!Atlas) _missingMdxReference(\"Atlas\", true);\n  return _jsx(Atlas, {\n    references: [{\n      canonical: 'enum-RelativeDateString',\n      context: {\n        col: 12,\n        fileFullPath: 'src/RelativeDateString.ts',\n        fileName: 'RelativeDateString.ts',\n        line: 5,\n        packageName: 'snippets',\n        signatureText: {\n          code: 'export enum RelativeDateString {\\n}',\n          lang: 'ts'\n        },\n        sourcecode: {\n          code: 'export enum RelativeDateString {\\n    /** Today since midnight */\\n    TODAY = \"TODAY\",\\n\\n    /** Yesterday since midnight */\\n    YESTERDAY = \"YESTERDAY\",\\n\\n    /** Nearest monday since midnight */\\n    BEGINNING_OF_WEEK = \"BEGINNING_OF_WEEK\",\\n\\n    /** 1st of the month since midnight */\\n    BEGINNING_OF_MONTH = \"BEGINNING_OF_MONTH\",\\n\\n    /** Previous 1st of the month since midnight */\\n    BEGINNING_OF_PREV_MONTH = \"BEGINNING_OF_PREV_MONTH\",\\n\\n    /** Exact 7 days ago since midnight */\\n    TODAY_MINUS_7_DAYS = \"TODAY-7DAYS\",\\n\\n    /** Exact 30 days ago since midnight */\\n    TODAY_MINUS_30_DAYS = \"TODAY-30DAYS\"\\n}',\n          lang: 'ts'\n        }\n      },\n      definitions: [{\n        properties: [{\n          context: undefined,\n          description: 'Today since midnight\\n',\n          name: 'TODAY (TODAY)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Yesterday since midnight\\n',\n          name: 'YESTERDAY (YESTERDAY)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Nearest monday since midnight\\n',\n          name: 'BEGINNING_OF_WEEK (BEGINNING_OF_WEEK)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: '1st of the month since midnight\\n',\n          name: 'BEGINNING_OF_MONTH (BEGINNING_OF_MONTH)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Previous 1st of the month since midnight\\n',\n          name: 'BEGINNING_OF_PREV_MONTH (BEGINNING_OF_PREV_MONTH)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Exact 7 days ago since midnight\\n',\n          name: 'TODAY_MINUS_7_DAYS (TODAY-7DAYS)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Exact 30 days ago since midnight\\n',\n          name: 'TODAY_MINUS_30_DAYS (TODAY-30DAYS)',\n          properties: undefined,\n          type: 'string'\n        }],\n        title: 'Members'\n      }],\n      description: 'A string that represents a relative date value used in API queries.\\nThis is an alternative to using ISO 8601 date strings.\\n',\n      examples: {\n        groups: []\n      },\n      title: 'Enum RelativeDateString'\n    }]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"]
