[{"_1":2},"/Users/zdunecki/Code/livesession/xyd/cli/plugins/xyd-plugin-zero/src/pages/docs",{"_3":4},"data",{"_5":6,"_58":59,"_64":65,"_68":63,"_69":70},"sidebarGroups",[7,49],{"_8":9,"_10":11},"group","Endpoints","items",[12,19,22,25,28,31,34,37,40,43,46],{"_13":14,"_15":16,"_17":18},"title","List sessions","href","/docs/api/rest/GetSessions","active",false,{"_13":20,"_15":21,"_17":18},"List alerts","/docs/api/rest/GetAllAlerts",{"_13":23,"_15":24,"_17":18},"Create alert","/docs/api/rest/CreateAnAlert",{"_13":26,"_15":27,"_17":18},"Update alert","/docs/api/rest/UpdateAnAlertById",{"_13":29,"_15":30,"_17":18},"Delete alert","/docs/api/rest/DeleteAnAlertById",{"_13":32,"_15":33,"_17":18},"List webhooks","/docs/api/rest/GetAListOfWebhooks",{"_13":35,"_15":36,"_17":18},"Create webhook","/docs/api/rest/CreateAWebhook",{"_13":38,"_15":39,"_17":18},"Update webhook","/docs/api/rest/UpdateAWebhook",{"_13":41,"_15":42,"_17":18},"Delete webhook","/docs/api/rest/DeleteAWebhook",{"_13":44,"_15":45,"_17":18},"List websites","/docs/api/rest/GetAListOfWebsites",{"_13":47,"_15":48,"_17":18},"Create website","/docs/api/rest/CreateAWebsite",{"_8":50,"_10":51},"Types",[52,55],{"_13":53,"_15":54,"_17":18},"EventKind","/docs/api/rest/EventKind",{"_13":56,"_15":57,"_17":18},"RelativeDateString","/docs/api/rest/RelativeDateString","breadcrumbs",[60,62],{"_13":50,"_15":61},"",{"_13":56,"_15":63},"docs/api/rest/RelativeDateString","navlinks",{"_66":67},"prev",{"_13":53,"_15":54},"slug","code","\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst toc = [];\nconst frontmatter = {\n  \"title\": \"RelativeDateString\",\n  \"layout\": \"wide\",\n  \"uniform\": \"~/snippets/src/RelativeDateString.ts\"\n};\nfunction _createMdxContent(props) {\n  const {Atlas} = props.components || ({});\n  if (!Atlas) _missingMdxReference(\"Atlas\", true);\n  return _jsx(Atlas, {\n    references: [{\n      canonical: 'enum-RelativeDateString',\n      context: {\n        col: 12,\n        fileFullPath: 'src/RelativeDateString.ts',\n        fileName: 'RelativeDateString.ts',\n        line: 5,\n        packageName: 'snippets',\n        signatureText: {\n          code: 'export enum RelativeDateString {\\n}',\n          lang: 'ts'\n        },\n        sourcecode: {\n          code: 'export enum RelativeDateString {\\n    /** Today since midnight */\\n    TODAY = \"TODAY\",\\n\\n    /** Yesterday since midnight */\\n    YESTERDAY = \"YESTERDAY\",\\n\\n    /** Nearest monday since midnight */\\n    BEGINNING_OF_WEEK = \"BEGINNING_OF_WEEK\",\\n\\n    /** 1st of the month since midnight */\\n    BEGINNING_OF_MONTH = \"BEGINNING_OF_MONTH\",\\n\\n    /** Previous 1st of the month since midnight */\\n    BEGINNING_OF_PREV_MONTH = \"BEGINNING_OF_PREV_MONTH\",\\n\\n    /** Exact 7 days ago since midnight */\\n    TODAY_MINUS_7_DAYS = \"TODAY-7DAYS\",\\n\\n    /** Exact 30 days ago since midnight */\\n    TODAY_MINUS_30_DAYS = \"TODAY-30DAYS\"\\n}',\n          lang: 'ts'\n        }\n      },\n      definitions: [{\n        properties: [{\n          context: undefined,\n          description: 'Today since midnight\\n',\n          name: 'TODAY (TODAY)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Yesterday since midnight\\n',\n          name: 'YESTERDAY (YESTERDAY)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Nearest monday since midnight\\n',\n          name: 'BEGINNING_OF_WEEK (BEGINNING_OF_WEEK)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: '1st of the month since midnight\\n',\n          name: 'BEGINNING_OF_MONTH (BEGINNING_OF_MONTH)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Previous 1st of the month since midnight\\n',\n          name: 'BEGINNING_OF_PREV_MONTH (BEGINNING_OF_PREV_MONTH)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Exact 7 days ago since midnight\\n',\n          name: 'TODAY_MINUS_7_DAYS (TODAY-7DAYS)',\n          properties: undefined,\n          type: 'string'\n        }, {\n          context: undefined,\n          description: 'Exact 30 days ago since midnight\\n',\n          name: 'TODAY_MINUS_30_DAYS (TODAY-30DAYS)',\n          properties: undefined,\n          type: 'string'\n        }],\n        title: 'Members'\n      }],\n      description: 'A string that represents a relative date value used in API queries.\\nThis is an alternative to using ISO 8601 date strings.\\n',\n      examples: {\n        groups: []\n      },\n      title: 'Enum RelativeDateString'\n    }]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n"]
