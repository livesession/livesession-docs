[{"_1":2,"_51":52},"layout:/docs/api",{"_3":4},"data",{"_5":6,"_38":39,"_43":44,"_48":42,"_49":36,"_50":22},"sidebarGroups",[7],{"_8":9,"_10":-7,"_11":12},"group","Get Started","icon","items",[13,27,32],{"_14":15,"_16":17,"_18":19,"_20":21,"_10":22,"_23":22,"_24":25},"title","Quickstart","href","/docs/api/quickstart","active",false,"uniqIndex",0,"","sidebarTitle","pageMeta",{"_14":15,"_26":15},"description",{"_14":28,"_16":29,"_18":19,"_20":30,"_10":22,"_23":22,"_24":31},"Authentication","/docs/api/authentication",1,{"_14":28,"_26":28},{"_14":33,"_16":34,"_18":19,"_20":35,"_10":22,"_23":22,"_24":36},"Access scopes","/docs/api/access-scopes",2,{"_14":33,"_26":37},"Access scopes for the LiveSession API","breadcrumbs",[40,41],{"_14":9,"_16":22},{"_14":33,"_16":42},"docs/api/access-scopes","navlinks",{"_45":46,"_47":-7},"prev",{"_14":28,"_16":29},"next","slug","metadata","bannerContentCode","/docs/api",{"_3":53},{"_5":54,"_38":63,"_43":66,"_48":42,"_68":69,"_49":62,"_70":71},[55],{"_8":9,"_10":-7,"_11":56},[57,59,61],{"_14":15,"_16":17,"_18":19,"_20":21,"_10":22,"_23":22,"_24":58},{"_14":15,"_26":15},{"_14":28,"_16":29,"_18":19,"_20":30,"_10":22,"_23":22,"_24":60},{"_14":28,"_26":28},{"_14":33,"_16":34,"_18":19,"_20":35,"_10":22,"_23":22,"_24":62},{"_14":33,"_26":37},[64,65],{"_14":9,"_16":22},{"_14":33,"_16":42},{"_45":67,"_47":-7},{"_14":28,"_16":29},"code","\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst toc = [{\n  \"depth\": 2,\n  \"id\": \"how-it-works\",\n  \"value\": \"How it works\",\n  \"attributes\": {\n    \"hProperties\": {\n      \"id\": \"how-it-works\"\n    }\n  },\n  \"children\": [],\n  \"maxTocDepth\": undefined\n}, {\n  \"depth\": 2,\n  \"id\": \"access-scopes\",\n  \"value\": \"Access scopes\",\n  \"attributes\": {\n    \"hProperties\": {\n      \"id\": \"access-scopes\"\n    }\n  },\n  \"children\": [],\n  \"maxTocDepth\": undefined\n}];\nconst frontmatter = {\n  \"title\": \"Access scopes\",\n  \"description\": \"Access scopes for the LiveSession API\"\n};\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    ...props.components\n  }, {Subtitle, Table} = _components;\n  if (!Subtitle) _missingMdxReference(\"Subtitle\", true);\n  if (!Table) _missingMdxReference(\"Table\", true);\n  if (!Table.Head) _missingMdxReference(\"Table.Head\", true);\n  if (!Table.Td) _missingMdxReference(\"Table.Td\", true);\n  if (!Table.Th) _missingMdxReference(\"Table.Th\", true);\n  if (!Table.Tr) _missingMdxReference(\"Table.Tr\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"livesession-api-access-scopes\",\n      children: \"LiveSession API access scopes\"\n    }), \"\\n\", _jsx(Subtitle, {\n      children: _jsx(_components.p, {\n        children: \"Learn about the access scopes required to use the LiveSession API.\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"All API requests needs access to specific scopes during the authorization process.\\nThis guide provides a list of available access scopes for LiveSession APIs.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"how-it-works\",\n      children: \"How it works\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Authorization\",\n        children: \"Authorization\"\n      }), \" is the process of giving permissions for tokens.\\nWhen you request an access token, you can specify the scopes that you want to grant to the token.\\nThe token will have access to the resources and actions allowed by the scopes.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"access-scopes\",\n      children: \"Access scopes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The following table lists the available access scopes for the LiveSession API:\"\n    }), \"\\n\", _jsxs(Table, {\n      children: [_jsx(Table.Head, {\n        children: _jsxs(Table.Tr, {\n          children: [_jsx(Table.Th, {\n            children: _jsx(_components.p, {\n              children: \"Scope\"\n            })\n          }), _jsx(Table.Th, {\n            children: _jsx(_components.p, {\n              children: \"Description\"\n            })\n          })]\n        })\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: _jsx(_components.code, {\n              children: \"users.sessions:read\"\n            })\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read user sessions list.\"\n          })\n        })]\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"websites:write\"\n            }), \", \", _jsx(_components.code, {\n              children: \"websites:read\"\n            })]\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read and write websites data.\"\n          })\n        })]\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"alerts:write\"\n            }), \", \", _jsx(_components.code, {\n              children: \"alerts:read\"\n            })]\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read and write alerts data.\"\n          })\n        })]\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"webhooks:write\"\n            }), \", \", _jsx(_components.code, {\n              children: \"webhooks:read\"\n            })]\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read and write webhooks data.\"\n          })\n        })]\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"funnels:write,\"\n            }), \" \", _jsx(_components.code, {\n              children: \"funnels:read\"\n            })]\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read and write funnels data.\"\n          })\n        })]\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"metrics:write\"\n            }), \", \", _jsx(_components.code, {\n              children: \"metrics:read\"\n            })]\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read and write metrics data.\"\n          })\n        })]\n      }), _jsxs(Table.Tr, {\n        children: [_jsx(Table.Td, {\n          children: _jsxs(_components.p, {\n            children: [_jsx(_components.code, {\n              children: \"dashboard:write\"\n            }), \", \", _jsx(_components.code, {\n              children: \"dashboard:read\"\n            })]\n          })\n        }), _jsx(Table.Td, {\n          children: _jsx(_components.p, {\n            children: \"Read and write dashboard data.\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  toc,\n  frontmatter,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","rawPage","---\ntitle: Access scopes\ndescription: Access scopes for the LiveSession API\n---\n\n# LiveSession API access scopes\n:::subtitle\n    Learn about the access scopes required to use the LiveSession API.\n:::\n\nAll API requests needs access to specific scopes during the authorization process.\nThis guide provides a list of available access scopes for LiveSession APIs.\n\n## How it works\n[Authorization](https://en.wikipedia.org/wiki/Authorization) is the process of giving permissions for tokens.\nWhen you request an access token, you can specify the scopes that you want to grant to the token.\nThe token will have access to the resources and actions allowed by the scopes.\n\n## Access scopes\nThe following table lists the available access scopes for the LiveSession API:\n\n:::table\n```ts\n[\n    [\"Scope\", \"Description\"],\n    [\"`users.sessions:read`\", \"Read user sessions list.\"],\n    [\"`websites:write`, `websites:read`\", \"Read and write websites data.\"],\n    [\"`alerts:write`, `alerts:read`\", \"Read and write alerts data.\"],\n    [\"`webhooks:write`, `webhooks:read`\", \"Read and write webhooks data.\"],\n    [\"`funnels:write,` `funnels:read`\", \"Read and write funnels data.\"],\n    [\"`metrics:write`, `metrics:read`\", \"Read and write metrics data.\"],\n    [\"`dashboard:write`, `dashboard:read`\", \"Read and write dashboard data.\"]\n]\n```\n:::\n"]
