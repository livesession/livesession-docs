#--- CORE

"""
---
title: DateTime
group: [GraphQL Types, Scalars]
---
A scalar representing date and time
"""
scalar DateTime

"""
---
title: UnixTimestamp
group: [GraphQL Types, Scalars]
---
A scalar representing Unix timestamp
"""
scalar UnixTimestamp # int64

"""
---
title: RelativeDate
group: [GraphQL Types, Scalars]
---
A scalar representing a relative date
"""
scalar RelativeDate

"""
---
title: DateRange
group: [GraphQL Types, Objects]
---
Date range object
"""
type DateRange {
    from: RelativeDate
    to: RelativeDate
}

"""
---
title: CachedResponse
group: [GraphQL Types, Objects]
---
Cached response object
"""
type CachedResponse {
    ttl: String!
    id: String!
    computed_at: UnixTimestamp!
    fresh: Boolean!
}
#--- CORE

"""
---
title: Funnel
group: [GraphQL Types, Objects]
---
Funnel object
"""
type Funnel {
    funnel_id: ID!
    created_by_agent_id: String!
    created_by_login: String!
    website_id: ID!
    name: String!
    description: String!
    segment_id: String!
    compute: ComputeFunnel
    is_favourite: Boolean!
    is_owner: Boolean!
    is_public: Boolean!
}

"""
---
title: ComputeFunnel
group: [GraphQL Types, Objects]
---
Compute funnel object
"""
type ComputeFunnel {
    date_range: DateRange
    steps: [FunnelStep]!
    conversion_value: FunnelConversionValue
    type: String
    filters: Filters
}

"""
---
title: FunnelStep
group: [GraphQL Types, Objects]
---
Funnel step object
"""
type FunnelStep {
    name: String
    filters: Filters
}

"""
---
title: FunnelComputeWriteInput
group: [GraphQL Types, Inputs]
---
Input for writing funnel compute
"""
input FunnelComputeWriteInput {
    type: String
    date_range: DateRangeInput!
    steps: [FunnelStepInput]!
    filters: FiltersInput
    conversion_value: FunnelConversionValueInput
}

"""
---
title: FunnelComputeInput
group: [GraphQL Types, Inputs]
---
Input for computing funnel
"""
input FunnelComputeInput {
    date_range: DateRangeInput!
    filters: FiltersInput!
    steps: [FunnelStepInput]!
    conversion_value: FunnelConversionValueInput
    type: String
}

"""
---
title: FunnelConversionValueInput
group: [GraphQL Types, Inputs]
---
Input for funnel conversion value
"""
input FunnelConversionValueInput {
    property_name: String!
    value_type: String!
    label: String!
}

"""
---
title: FunnelConversionValue
group: [GraphQL Types, Objects]
---
Funnel conversion value object
"""
type FunnelConversionValue {
    property_name: String!
    value_type: String!
    label: String!
}

"""
---
title: FunnelStepCompute
group: [GraphQL Types, Objects]
---
Funnel step compute object
"""
type FunnelStepCompute {
    sessions: Int!
    visitors: Int!
    events: Int!
}

"""
---
title: FunnelComputeResponse
group: [GraphQL Types, Objects]
---
Response for funnel compute
"""
type FunnelComputeResponse {
    cached_response: CachedResponse!
    total_sessions: Int!
    total_visitors: Int!
    total_events: Int!
    conversion_value: FunnelConversionValueResponse
    steps: [FunnelStepCompute]!
}

"""
---
title: FunnelConversionValueResponse
group: [GraphQL Types, Objects]
---
Response for funnel conversion value
"""
type FunnelConversionValueResponse {
    value: Float!
    label: String!
}

"""
---
title: FunnelSetFavouriteInput
group: [GraphQL Types, Inputs]
---
Input for setting funnel as favourite
"""
input FunnelSetFavouriteInput {
    is_favourite: Boolean!
}

"""
---
title: Filters
group: [GraphQL Types, Objects]
---
Filters object
"""
type Filters {
    must: [Filter]!
    should: [Filter]!
    must_not: [Filter]!
}

"""
---
title: Filter
group: [GraphQL Types, Objects]
---
Filter object
"""
type Filter {
    name: String!
    unit: String
    group: String
    data: FilterData!
    defined_event_id: String
    stable_id: String
    parent_filter_stable_id: String
}

"""
---
title: FilterDataString
group: [GraphQL Types, Objects]
---
Filter data string object
"""
type FilterDataString {
    value: String
    values: [String]
    operator: String!
}

"""
---
title: FilterDataInt
group: [GraphQL Types, Objects]
---
Filter data int object
"""
type FilterDataInt {
    value: Int
    values: [Int]
    operator: String!
}

"""
---
title: FilterDataFloat
group: [GraphQL Types, Objects]
---
Filter data float object
"""
type FilterDataFloat {
    value: Float!
    values: [Float!]
    operator: String!
}

"""
---
title: FilterDataBool
group: [GraphQL Types, Objects]
---
Filter data bool object
"""
type FilterDataBool {
    value: Boolean
    operator: String!
}

"""
---
title: FilterDataParam
group: [GraphQL Types, Objects]
---
Filter data param object
"""
type FilterDataParam {
    name: String!
    value: FilterDataString
}

"""
---
title: FilterDataEvent
group: [GraphQL Types, Objects]
---
Filter data event object
"""
type FilterDataEvent {
    type: String!
    group: FilterDataString
    element: FilterDataString
    txt: FilterDataString
    element_path: FilterDataString
    location: FilterDataString
    value: FilterDataString
    height: FilterDataInt
    width: FilterDataInt
    timestamp: FilterDataInt
    x: FilterDataInt
    y: FilterDataInt
}

"""
---
title: FilterData
group: [GraphQL Types, Objects]
---
Filter data object
"""
type FilterData {
    string: FilterDataString
    int: FilterDataInt
    bool: FilterDataBool
    event: FilterDataEvent
    param: FilterDataParam
    event_properties: [FilterDataCustomEventProperty]
}

"""
---
title: FilterDataCustomEventProperty
group: [GraphQL Types, Objects]
---
Filter data custom event property object
"""
type FilterDataCustomEventProperty {
    name: String!
    value_str: FilterDataString
    value_bool: FilterDataBool
    value_int: FilterDataInt
    value_float: FilterDataFloat
}

"""
---
title: FunnelInput
group: [GraphQL Types, Inputs]
---
Input for funnel
"""
input FunnelInput {
    """
    Name of the funnel
    """
    name: String!
    description: String
    website_id: ID
    segment_id: String!
    compute: FunnelComputeWriteInput!
    is_public: Boolean
}

"""
---
title: FunnelStepInput
group: [GraphQL Types, Inputs]
---
Input for funnel step
"""
input FunnelStepInput {
    name: String
    filters: FiltersInput
}

"""
---
title: FiltersInput
group: [GraphQL Types, Inputs]
---
Input for filters
"""
input FiltersInput {
    must: [FilterInput]
    should: [FilterInput]
    must_not: [FilterInput]
}

"""
---
title: FilterInput
group: [GraphQL Types, Inputs]
---
Input for filter
"""
input FilterInput {
    name: String!
    unit: String
    group: String
    data: FilterDataInput!
    defined_event_id: String
    stable_id: String
    parent_filter_stable_id: String
}

"""
---
title: FilterDataInput
group: [GraphQL Types, Inputs]
---
Input for filter data
"""
input FilterDataInput {
    string: FilterDataStringInput
    int: FilterDataIntInput
    bool: FilterDataBoolInput
    event: FilterDataEventInput
    param: FilterDataParamInput
    event_properties: [FilterDataCustomEventPropertyInput]
}

"""
---
title: FilterDataStringInput
group: [GraphQL Types, Inputs]
---
Input for filter data string
"""
input FilterDataStringInput {
    value: String
    values: [String!]
    operator: String!
}

"""
---
title: FilterDataIntInput
group: [GraphQL Types, Inputs]
---
Input for filter data int
"""
input FilterDataIntInput {
    value: Int
    values: [Int!]
    operator: String!
}

"""
---
title: FilterDataBoolInput
group: [GraphQL Types, Inputs]
---
Input for filter data bool
"""
input FilterDataBoolInput {
    value: Boolean!
    operator: String!
}

"""
---
title: FilterDataParamInput
group: [GraphQL Types, Inputs]
---
Input for filter data param
"""
input FilterDataParamInput {
    name: String!
    value: FilterDataStringInput
}

"""
---
title: FilterDataEventInput
group: [GraphQL Types, Inputs]
---
Input for filter data event
"""
input FilterDataEventInput {
    type: String!
    group: FilterDataStringInput
    element: FilterDataStringInput
    txt: FilterDataStringInput
    element_path: FilterDataStringInput
    location: FilterDataStringInput
    value: FilterDataStringInput
    height: FilterDataIntInput
    width: FilterDataIntInput
    timestamp: FilterDataIntInput
    x: FilterDataIntInput
    y: FilterDataIntInput
}

"""
---
title: FilterDataFloatInput
group: [GraphQL Types, Inputs]
---
Input for filter data float
"""
input FilterDataFloatInput {
    values: [Float]
    value: Float
    operator: String!
}

"""
---
title: FilterDataCustomEventPropertyInput
group: [GraphQL Types, Inputs]
---
Input for filter data custom event property
"""
input FilterDataCustomEventPropertyInput {
    name: String!
    value_str: FilterDataStringInput
    value_int: FilterDataIntInput
    value_bool: FilterDataBoolInput
    value_float: FilterDataFloatInput
}

"""
---
title: MetricSetFavouriteInput
group: [GraphQL Types, Inputs]
---
Input for setting metric as favourite
"""
input MetricSetFavouriteInput {
    is_favourite: Boolean!
}

"""
---
title: MetricSetFavouriteResponse
group: [GraphQL Types, Objects]
---
Response for setting metric as favourite
"""
type MetricSetFavouriteResponse {
    success: Boolean!
    metric_id: ID!
}

"""
---
title: DateRangeInput
group: [GraphQL Types, Inputs]
---
Input for date range
"""
input DateRangeInput {
    from: RelativeDate
    to: RelativeDate
}

# Define the Mutation type
"""
---
title: Mutation
group: [Root Types]
---
The root mutation type
"""
type Mutation {
    """
    ---
    title: Create Funnel
    group: [GraphQL, Funnels]
    ---
    Create a new funnel
    """
    funnelCreate(input: FunnelInput!): Funnel!

    """
    ---
    title: Delete Funnel
    group: [GraphQL, Funnels]
    ---
    Delete a funnel by ID
    """
    funnelDelete(funnel_id: ID!): Boolean!

    """
    ---
    title: Update Funnel
    group: [GraphQL, Funnels]
    ---
    Update an existing funnel
    """
    updateFunnel(funnel_id: ID!): Boolean!

    """
    ---
    title: Set Funnel Favourite
    group: [GraphQL, Funnels]
    ---
    Set a funnel as favourite
    """
    funnelSetFavourite(funnel_id: ID!, input: FunnelSetFavouriteInput!): Boolean!

    """
    ---
    title: Compute Funnel
    group: [GraphQL, Funnels]
    ---
    Compute a funnel
    """
    funnelCompute(website_id: ID, input: FunnelComputeInput!): FunnelComputeResponse!
}