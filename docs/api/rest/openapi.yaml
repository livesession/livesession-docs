openapi: 3.0.0
info:
    title: User and Todo API
    version: '1.0'
servers:
    - url: https://api.example.com/v1
paths:
    /users:
        get:
            summary: Get a list of all users
            description: |
                ---
                title: Users
                group: [REST, Users]
                ---
                
                Get a list of all users
            operationId: getUsers
            responses:
                '200':
                    description: A list of users
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'

    /users/{userId}:
        get:
            summary: Get a user by ID
            description: |
                ---
                title: User
                group: [REST, Users]
                ---
                
                Get a user by ID
            operationId: getUserById
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: User object
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'

    /todos:
        get:
            summary: Get a list of all todos
            description: |
                ---
                title: Todos
                group: [REST, Todos]
                ---
                
                Get a list of all todos
            operationId: getTodos
            responses:
                '200':
                    description: A list of todos
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Todo'

        post:
            summary: Create a new todo
            description: |
                ---
                title: Create Todo
                group: [REST, Todos]
                ---
                
                Create a new todo
            operationId: createTodo
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTodoInput'
            responses:
                '201':
                    description: The created todo
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Todo'

    /todos/{todoId}:
        get:
            summary: Get a todo by ID
            description: |
                ---
                title: Todo
                group: [REST, Todos]
                ---
                
                Get a todo by ID
            operationId: getTodoById
            parameters:
                - name: todoId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Todo object
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Todo'
        put:
            summary: Update an existing todo
            description: |
                ---
                title: Update Todo
                group: [REST, Todos]
                ---
                
                Update an existing todo
            operationId: updateTodo
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTodoInput'
            responses:
                '200':
                    description: The updated todo
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Todo'
        delete:
            summary: Delete a todo by ID
            description: |
                ---
                title: Delete Todo
                group: [REST, Todos]
                ---
                
                Delete a todo by ID
            operationId: deleteTodo
            parameters:
                - name: todoId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                '204':
                    description: Todo deleted successfully

components:
    schemas:
        User:
            type: object
            properties:
                id:
                    type: string
                    description: The unique ID of the user
                name:
                    type: string
                    description: The name of the user
                email:
                    type: string
                    description: The email of the user
                todos:
                    type: array
                    items:
                        $ref: '#/components/schemas/Todo'
                    description: The list of todos created by the user
        Todo:
            type: object
            properties:
                id:
                    type: string
                    description: The unique ID of the todo
                title:
                    type: string
                    description: The title of the todo
                description:
                    type: string
                    description: The description of the todo
                completed:
                    type: boolean
                    description: The status of the todo (completed or not)
                dueDate:
                    type: string
                    format: date
                    description: The due date of the todo
        CreateTodoInput:
            type: object
            properties:
                title:
                    type: string
                    description: The title of the todo
                description:
                    type: string
                    description: The description of the todo
                dueDate:
                    type: string
                    format: date
                    description: The due date of the todo
                userId:
                    type: string
                    description: The ID of the user creating the todo
        UpdateTodoInput:
            type: object
            properties:
                id:
                    type: string
                    description: The unique ID of the todo
                title:
                    type: string
                    description: The title of the todo
                description:
                    type: string
                    description: The description of the todo
                completed:
                    type: boolean
                    description: The status of the todo
                dueDate:
                    type: string
                    format: date
                    description: The due date of the todo
